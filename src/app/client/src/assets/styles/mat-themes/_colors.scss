@use 'sass:map';
@use 'sass:meta';
@use '@angular/material' as mat;
@use "./palette" as *;
// @use './import-component-theme-config';

// @mixin color-success {
//   $success: mat.define-palette(mat.$green-palette);
//   color: mat.get-color-from-palette($success, 500) !important;
// }

// @mixin color-info {
//   $info: mat.define-palette(mat.$blue-palette);
//   color: mat.get-color-from-palette($info, 900) !important;
// }

// @mixin color-error {
//   $error: mat.define-palette(mat.$orange-palette);
//   color: mat.get-color-from-palette($error, 900) !important;
// }

@mixin theme-var-colors($theme) {

  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  // Get the primary color palette from the color-config.
  $primary: map.get($color-config, 'primary');
  $accent: map.get($color-config, 'accent');
  $warn: map.get($color-config, 'warn');
  $background: map.get($color-config, 'background');
  $foreground: map.get($color-config, 'foreground');
  $info: mat.define-palette(mat.$blue-palette);
  $success: mat.define-palette(mat.$green-palette);
  $error: mat.define-palette(mat.$orange-palette);

  $color-primary: mat.get-color-from-palette($primary);
  $color-accent: mat.get-color-from-palette($accent);
  $color-warn: mat.get-color-from-palette($warn);
  $color-success: mat.get-color-from-palette($success);
  $color-info: mat.get-color-from-palette($info);
  $color-error: mat.get-color-from-palette($error);

  --color-primary: #{$color-primary};
  --color-accent: #{$color-accent};
  --color-warn: #{$color-warn};
  --color-success: #{$color-success};
  --color-info: #{$color-info};
  --color-error: #{$color-error};

  .color-primary {
    color: var(--color-primary);
  }

  .color-accent {
    color: var(--color-accent);
  }

  .color-accent {
    color: var(--color-accent);
  }

  .color-success {
    color: var(--color-success);
  }

  .color-info {
    color: var(--color-info);
  }

  .color-error {
    color: var(--color-error);
  }

  .bg-primary-100 {
    background-color: mat.get-color-from-palette($primary, 100);
  }

  .bg-primary-200 {
    background-color: mat.get-color-from-palette($primary, 200);
  }

  .bg-primary-500 {
    background-color: mat.get-color-from-palette($primary, 500);
  }


  //border radius
  $brValues: 0, 2, 3, 4, 5, 8, 10, 12, 15, 16, 20, 24, 30, 32, 40, 48, 50, 52, 56, 60, 64;
  @each $value in $brValues {
    $baseMvalue: 0.0625 * $value +rem;
    .br-#{$value} {
      border-radius: $baseMvalue;
    }
  }
  //border radius ends 







}
/* color mixin ends here */