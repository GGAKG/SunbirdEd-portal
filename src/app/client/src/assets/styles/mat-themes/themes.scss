/**
* Created at 1397/12/14 (2019/3/5).
* @author {@link https://mirismaili.github.io S. Mahdi Mir-Ismaili}
*/

// @use "@angular/material" as mat;
// @include mat-core();

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "sass:map";
@use '@angular/material' as mat;
@use "./palette" as *;
@use "./includes" as *;
@import './../../../app/plugins/profile/components/profile-page/profile-page.component.scss-theme.scss';
// Whether duplication warnings should be disabled. Warnings enabled by default.
mat.$theme-ignore-duplication-warnings: false !default;
// Whether density should be generated by default.
$_generate-default-density: true !default;

@include mat.strong-focus-indicators((border-style: dotted,
    border-width: 0.25rem,
    border-radius: 0.125rem,
  ));

@each $css-class,
$theme in $app-themes {
  $primary: if(map-has-key($theme, primary),
    map-get($theme, primary),
    mat.define-palette(map-get($theme, primary-base)));
  $accent: if(map-has-key($theme, accent),
    map-get($theme, accent),
    mat.define-palette(map-get($theme, accent-base)));
  $warn: if(map-has-key($theme, warn),
    map-get($theme, warn),
    mat.define-palette(if(map-has-key($theme, warn-base),
        map-get($theme, warn-base),
        mat.$red-palette)));
  $background: if(map-has-key($theme, background),
    map-get($theme, background),
    mat.define-palette(if(map-has-key($theme, background),
        map-get($theme, background),
        $background)));
  $foreground: if(map-has-key($theme, foreground),
    map-get($theme, foreground),
    mat.define-palette(if(map-has-key($theme, foreground),
        map-get($theme, foreground),
        $foreground)));
  $typography: if(map-has-key($theme, typography),
    map-get($theme, typography),
    mat-config(if(map-has-key($config, typography),
        map-get($config, typography),
        typography)));

  /* #{$css-class} starts here */
  .#{$css-class} {

    // light theme
    $app-themes: mat.define-light-theme($primary, $accent, $warn);
    @include mat.all-component-themes($app-themes);
    @include mat.strong-focus-indicators-theme($app-themes);
    // @include app-root-theme(mat.define-light-theme($primary, $accent, $warn));
    // @include no-result-component(mat.define-light-theme($primary, $accent, $warn));
    //@include mat-expansion-panel(mat.define-light-theme($primary, $accent, $warn));
    // @include theme-color-grabber($app-themes);
    // @include theme-mat-card($app-themes);
    @include theme-mat-sidebar($app-themes);

    // common styles for all themes
    @include theme-mat-modal($app-themes);
    @include toolbar-menu($app-themes);
    @include pageback-toolbar($app-themes);
    @include mat-form-field($app-themes);
    @include theme-var-colors($app-themes);
    @include mat-spinner-card($app-themes);
    @include mat-expansion-panel($app-themes);
    @include profile-page-theme($app-themes);

    /* different typography based on the theme -  */
    @include mat.all-component-typographies($typography);
    /* custom typography rem */
    @include mat.core($custom-typography);

    $primary50: mat.get-color-from-palette($primary, 50);
    $primary100: mat.get-color-from-palette($primary, 100);
    $primary200: mat.get-color-from-palette($primary, 200);
    $accent500: mat.get-color-from-palette($accent, 500);

    $primary500: mat.get-color-from-palette($primary, 500);
    $accent500: mat.get-color-from-palette($accent, 500);
    $warn500: mat.get-color-from-palette($warn, 500);

    --primary-color: #{$accent500};
    --secondary-color: #{$primary500};
    --red: #{$warn500};

    --sbt-body-bg: #{$primary50};
    --sbt-body-bg2: #{$primary100};
    --sb-profile-bg-c-4: var(--sbt-body-bg);
    --sbt-footer-bg: var(--sbt-body-bg2);
    --cc-grade-pill-container-bg: var(--sbt-body-bg);
    --sb-modal-content-bg: var(--sbt-body-bg);
    --sb-modal-actions-bg: var(--sbt-body-bg);
    --sbt-compt-bg: var(--sbt-body-bg);
    --cc-chapter-bg: var(--sbt-body-bg2);
    --sbt-filter-bar-bg: var(--sbt-body-bg);
    --primary-color: #{$accent500};
    $primary500: mat.get-color-from-palette($primary);
    --sbt-header-bg: #{$primary500};

    .mat-app-background,
    .new-layout-footer {
      background: mat.get-color-from-palette($primary, 50);
    }

    // dark theme
    @if $css-class=="pink-bluegrey" or $css-class=="purple-green" or $css-class=="green-grey" {
      $app-themes: mat.define-dark-theme($primary, $accent, $warn);
      @include mat.all-component-colors($app-themes);
      @include mat.strong-focus-indicators-theme($app-themes);
      @include profile-page-theme($app-themes);
      $primary100: map-get($background, background); // mat.get-color-from-palette($accent, 900);
      $primary200: #232323;
      $accent500: mat.get-color-from-palette($accent, 500);
      --sbt-body-bg: #{$primary100};
      --sbt-body-bg2: #{$primary200}; // 232323
      --sb-profile-bg-c-4: var(--sbt-body-bg);
      --sbt-footer-bg: var(--sbt-body-bg2);
      --cc-grade-pill-container-bg: var(--sbt-body-bg);
      --sbt-compt-bg: var(--sbt-body-bg);
      --sb-modal-content-bg: var(--sbt-body-bg);
      --sb-modal-actions-bg: var(--sbt-body-bg);
      --cc-chapter-bg: var(--sbt-body-bg2);
      --sb-section-preference: var(--white);
      --sbt-footer-info-links: var(--white);
      --sbt-filter-bar-bg: var(--sbt-body-bg);
    }

    // $variant-themes:mat.define-light-theme($success,$info);
    // @include button-variants.color($variant-themes, $variants-theme);
    // common styles
    .item.active .sb-icon {
      background: #fff !important;
    }
  }

  /* theme button */
  .themeMenuDropdown .#{$css-class} use.docs-theme-icon-background {
    fill: map-get($background, background);
  }

  .themeMenuDropdown .#{$css-class} use.docs-theme-icon-button {
    fill: mat.get-color-from-palette($accent, 500);
  }

  .themeMenuDropdown .#{$css-class} use.docs-theme-icon-toolbar {
    fill: mat.get-color-from-palette($primary, 500);
  }
}

/* accessibilty grey bar */
@import "./accessbilityBar";